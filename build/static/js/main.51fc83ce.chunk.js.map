{"version":3,"sources":["components/Contacts/Contacts.module.css","components/Phonebook/PhoneBookInput/PhonebookInput.module.css","components/Filter/Filter.module.css","logo.svg","components/Phonebook/PhoneBookInput/PhonebookInput.js","components/Phonebook/Phonebook.js","components/Filter/Filter.js","components/Contacts/ContactsListItem/ContactsListItem.js","components/Contacts/Contacts.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","PhonebookInput","name","number","onSubmitContacts","onChangeInpuntName","className","style","form","onSubmit","formLabel","formInput","type","pattern","title","required","onChange","value","btn","Phonebook","state","e","target","setState","preventDefault","props","resetForm","this","Component","Filter","filter","onChangeFilter","ContactsListItem","contacts","onDeleteContact","map","id","toLocaleLowerCase","includes","trim","formListItem","text","onClick","Contacts","contactsList","App","addContacts","some","contact","alert","uuidv4","textAlign","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.51fc83ce.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsList\":\"Contacts_contactsList__2J3aV\",\"formListItem\":\"Contacts_formListItem__3CBYw\",\"text\":\"Contacts_text__1wj-C\",\"btn\":\"Contacts_btn__171Vl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"PhonebookInput_form__1LRQV\",\"formLabel\":\"PhonebookInput_formLabel__5iF1m\",\"formInput\":\"PhonebookInput_formInput__3vik-\",\"btn\":\"PhonebookInput_btn__3_WRg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formLabel\":\"Filter_formLabel__271WV\",\"formInput\":\"Filter_formInput__38F4H\"};","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import style from './PhonebookInput.module.css'\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst PhonebookInput = ({name, number, onSubmitContacts, onChangeInpuntName}) => {\r\n    return (\r\n        <form className={style.form} onSubmit={onSubmitContacts}>\r\n            <label className={style.formLabel}>\r\n                Name\r\n            <input\r\n                className={style.formInput}\r\n                type=\"text\"\r\n                name=\"name\"\r\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                required\r\n                onChange={onChangeInpuntName}\r\n                value={name}\r\n            />\r\n            </label>\r\n            <label className={style.formLabel}>\r\n                Number\r\n                <input\r\n                className={style.formInput}\r\n                type=\"tel\"\r\n                name=\"number\"\r\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                required\r\n                onChange={onChangeInpuntName}\r\n                value={number}\r\n                />\r\n            </label>\r\n            <button type=\"submit\" className={style.btn}>ADD contacts</button>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default PhonebookInput;\r\n\r\nPhonebookInput.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired\r\n}","import React, {Component} from 'react';\r\nimport PhonebookInput from './PhoneBookInput/PhonebookInput';\r\n// import styled from 'styled-components';\r\n// import PropTypes from 'prop-types';\r\n\r\n\r\n\r\nclass Phonebook extends Component {\r\n\r\n    state = {\r\n        name: '',\r\n        number: ''\r\n      }\r\n    onChangeInpuntName = (e) => {\r\n        const {name, value} = e.target\r\n        this.setState({[name]: value})\r\n    }\r\n    \r\n    onSubmitContacts = (e) => {\r\n        e.preventDefault();\r\n        const {name, number} = this.state;\r\n        this.props.onSubmitContacts(name, number)\r\n        this.resetForm()\r\n\r\n        \r\n    }\r\n    \r\n    resetForm = () => {\r\n        this.setState({name: \"\", number: \"\"})\r\n    }\r\n\r\nrender() {\r\n    const {name, number} = this.state\r\n    return (\r\n        <>\r\n        <PhonebookInput \r\n            name={name} \r\n            number={number} \r\n            onChangeInpuntName={this.onChangeInpuntName} \r\n            onSubmitContacts={this.onSubmitContacts}/>\r\n        </>\r\n    );\r\n}\r\n}\r\n\r\n\r\n\r\n\r\nexport default Phonebook;\r\n\r\n// const propTypes = {};","import style from './Filter.module.css'\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst Filter = ({filter, onChangeFilter}) => {\r\n    return (\r\n        <label className={style.formLabel}>\r\n                Find contacts by name\r\n                <input\r\n                className={style.formInput}\r\n                    type=\"text\"\r\n                    name=\"filter\"\r\n                    onChange={onChangeFilter}\r\n                    value={filter}\r\n                />\r\n            </label>\r\n    );\r\n}\r\n\r\nexport default Filter;\r\n\r\nFilter.propTypes = {\r\n    filter: PropTypes.string.isRequired,\r\n}","import style from '../Contacts.module.css'\r\nimport PropTypes from 'prop-types';\r\nconst ContactsListItem = ({filter, contacts, onDeleteContact}) => {\r\n    return (\r\n       filter ? \r\n       contacts.map(({name, number, id}) => {\r\n        if (name.toLocaleLowerCase().includes(filter.trim().toLocaleLowerCase())) {\r\n           return <li className={style.formListItem} key={id}>\r\n                        <p className={style.text}>{name}: {number}</p>\r\n                        <button className={style.btn} type=\"button\" onClick={onDeleteContact} id={id}>Delete</button>\r\n                    </li> \r\n        }\r\n       }\r\n   ) :\r\n        contacts.map(({name, number, id})=>(\r\n                <li className={style.formListItem} key={id}>\r\n                    <p className={style.text}>{name}: {number}</p>\r\n                    <button type=\"button\" className={style.btn} onClick={onDeleteContact} id={id}>Delete</button>\r\n                </li>\r\n            \r\n\r\n        )\r\n        )\r\n    );\r\n}\r\n\r\nexport default ContactsListItem;\r\n\r\nContactsListItem.propTypes = {\r\n    filter: PropTypes.string.isRequired,\r\n    contacts: PropTypes.array,\r\n    name: PropTypes.string,\r\n    number: PropTypes.string,\r\n    id: PropTypes.string\r\n}","import ContactsListItem from \"./ContactsListItem/ContactsListItem\";\r\nimport style from './Contacts.module.css'\r\n\r\nconst Contacts = ({filter, contacts, onDeleteContact}) => {\r\n    \r\n    return (\r\n        <>\r\n            <ul className={style.contactsList}>\r\n                <ContactsListItem \r\n                    contacts={contacts}\r\n                    filter={filter}\r\n                    onDeleteContact={onDeleteContact}\r\n                />\r\n            </ul>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Contacts;","import logo from './logo.svg';\nimport './App.css';\nimport React, { Component } from 'react'\nimport { v4 as uuidv4 } from 'uuid';\nimport Phonebook from './components/Phonebook/Phonebook';\nimport Filter from './components/Filter/Filter';\nimport Contacts from './components/Contacts/Contacts';\n\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: ''\n  }\n  addContacts = (name, number) => {\n    const {contacts} = this.state\n    const checkContacts = contacts.some((contact)=>{\n      return contact.name.trim().toLocaleLowerCase() === name.trim().toLocaleLowerCase()\n    }) \n    if (!checkContacts){\n      this.setState({contacts: [...contacts, {name, number, id: uuidv4()}]});\n    } else {\n      alert(`${name} is already in contacts`)\n    }\n  }\n  onChangeFilter = (e) => {\n    const {name, value} = e.target\n    this.setState({[name]: value})\n  }\n  onDeleteContact = (e) => {\n    const{id} = e.target\n    const {contacts} = this.state\n    this.setState({contacts: contacts.filter((contact)=>contact.id !== id)})\n}\n  render() {\n    const {filter, contacts} = this.state\n    return (\n      <div>\n        <h1 style={{textAlign: \"center\"}}>Phonebook</h1>\n        <Phonebook onSubmitContacts={this.addContacts}/>\n\n        <h2 style={{textAlign: \"center\"}}>Contacts</h2>\n        <Filter \n            filter={filter}\n            onChangeFilter={this.onChangeFilter}\n        />\n        <Contacts\n            filter={filter} \n            contacts={contacts}\n            onDeleteContact={this.onDeleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}